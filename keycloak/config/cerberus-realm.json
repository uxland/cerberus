{
  "id" : "209dec48-f7bf-42af-b431-0b265114082f",
  "realm" : "cerberus",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 600,
  "accessTokenLifespanForImplicitFlow" : 480,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "ae9ed3eb-0844-49d6-bcab-61df577c2988",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "209dec48-f7bf-42af-b431-0b265114082f",
      "attributes" : { }
    }, {
      "id" : "5666dce0-9f85-48ab-8d1a-9ef208d6b79f",
      "name" : "default-roles-cerberus",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "209dec48-f7bf-42af-b431-0b265114082f",
      "attributes" : { }
    }, {
      "id" : "338e47f4-7339-4260-8407-344f55ce0c42",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "209dec48-f7bf-42af-b431-0b265114082f",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "fb808257-ff30-4cfc-a4e1-367ac519aabb",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "68069e77-09f6-4684-bff7-41f409229ab5",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "484d7ec6-cbc4-492e-b556-6b89dfea6d36",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "959b110c-05b6-4064-9542-c9b967ac4721",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "21c39794-75fa-4070-ad57-14ac41b3ef50",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "1cb9d13d-2bf6-412d-a480-1df5bd86526a",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "da377405-f6f3-4e70-98bd-52b09e8a2542",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "8bcec907-a80a-496d-a32e-4c1af93f4528",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "f22784cb-2c43-4fc2-b452-ef6a36645013",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "ffea619a-ec0b-41cf-9645-c26faec98ba3",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "0189fb87-6409-4915-8f36-a51571c3e98b",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "8c840f21-0387-45a0-9b49-a0463912b373",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "853bd0bd-6578-499d-85f7-67f03264dbed",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "9b8a2b47-8b51-4c80-8f93-66422f344979",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "96b42a9f-e55b-4f30-8a08-ed503ba9253e",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "6afebef0-1e84-47bb-a730-78dc3065bd61",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "1f36af1b-6769-4e27-9c71-ef293c520062",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "e8946ace-d989-4640-8058-d39cd1f971f7",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-authorization", "impersonation", "manage-identity-providers", "view-identity-providers", "manage-clients", "manage-events", "view-users", "query-groups", "view-realm", "manage-users", "query-realms", "view-clients", "manage-authorization", "manage-realm", "create-client", "query-users", "view-events", "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      }, {
        "id" : "51281686-4a23-48c6-8740-efe2d11ad14e",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "cerberus" : [ {
        "id" : "b254f7f4-0f78-44b5-9f1f-edcbfaddec62",
        "name" : "maintenance::admin",
        "description" : "Admin of Maintenance vertical module",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "251e0dfe-c7f2-4c5c-b3c9-06e40e753ba5",
        "attributes" : { }
      }, {
        "id" : "64bc6fb7-16ff-471f-a2aa-b92f888091b4",
        "name" : "uma_protection",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "251e0dfe-c7f2-4c5c-b3c9-06e40e753ba5",
        "attributes" : { }
      }, {
        "id" : "6a0c97ab-d05e-4086-80b7-6a7270b672b0",
        "name" : "organization-structure::admin",
        "description" : "Can admin the organization structure, adding, editing and removing locations and cameras",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "251e0dfe-c7f2-4c5c-b3c9-06e40e753ba5",
        "attributes" : { }
      }, {
        "id" : "6d77be92-e980-46ed-8fbf-28df0572a1fa",
        "name" : "maintenance::consultant",
        "description" : "Camera calibration and filter setup",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "251e0dfe-c7f2-4c5c-b3c9-06e40e753ba5",
        "attributes" : { }
      }, {
        "id" : "84f90fa2-98d7-4324-b277-a1c66d347d46",
        "name" : "maintenance::operator",
        "description" : "Operator user of maintenance module",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "251e0dfe-c7f2-4c5c-b3c9-06e40e753ba5",
        "attributes" : { }
      }, {
        "id" : "5e0aad1f-04ca-489c-9ad2-69750d717bdc",
        "name" : "maintenance::manager",
        "description" : "Manager of Maintenance",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "251e0dfe-c7f2-4c5c-b3c9-06e40e753ba5",
        "attributes" : { }
      } ],
      "broker" : [ {
        "id" : "41a4828e-4c46-49ed-b17b-57f8339d99ca",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d532bf2e-7995-4b60-82ff-fc1a22931b5c",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "0a3bd57d-9ef9-4ea1-aac5-712f2a19b529",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
        "attributes" : { }
      }, {
        "id" : "04f06c58-0667-44a9-a0a5-6224fab47401",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
        "attributes" : { }
      }, {
        "id" : "d7c2ddd0-9361-4667-a01a-18ec024a9793",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
        "attributes" : { }
      }, {
        "id" : "76c63f22-4741-45a3-ac50-3a8af342a3d4",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
        "attributes" : { }
      }, {
        "id" : "c21b3dcc-6357-45fe-8fb0-1a5c1045fb43",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
        "attributes" : { }
      }, {
        "id" : "ec8f335b-a66c-43ab-928d-ed5652281199",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
        "attributes" : { }
      }, {
        "id" : "680df7a5-bb40-42b2-a2be-e58ab70e26a4",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
        "attributes" : { }
      }, {
        "id" : "0e66dada-241a-42ba-b146-0d67a0bb076d",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "92249bf0-3dd2-4f69-96f1-65a75accccf7",
    "name" : "god",
    "path" : "/god",
    "subGroups" : [ ],
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : {
      "realm-management" : [ "impersonation", "manage-identity-providers", "manage-clients", "manage-events", "manage-users", "manage-authorization", "manage-realm", "create-client" ],
      "cerberus" : [ "maintenance::admin", "organization-structure::admin", "maintenance::operator", "maintenance::consultant", "maintenance::manager" ],
      "broker" : [ "read-token" ],
      "account" : [ "manage-account-links", "view-applications", "delete-account", "view-consent", "manage-consent", "view-profile", "view-groups", "manage-account" ]
    }
  } ],
  "defaultRole" : {
    "id" : "5666dce0-9f85-48ab-8d1a-9ef208d6b79f",
    "name" : "default-roles-cerberus",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "209dec48-f7bf-42af-b431-0b265114082f"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "85d3c858-a54f-49b7-9682-65a3c6d5e58e",
    "username" : "admin",
    "firstName" : "Admin",
    "lastName" : "Admin",
    "email" : "dpinart@uxland.cat",
    "emailVerified" : false,
    "createdTimestamp" : 1728198895764,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "c36f1a7c-8abd-48b1-a2cb-14f5ee80aba8",
      "type" : "password",
      "value": "cerberus",
      "createdDate" : 1728795902872,
      "secretData" : "{\"value\":\"UjJvZLlCDtnzNQBnVyYnzTBRDiyKrMheWdRTTOL6BC8=\",\"salt\":\"drAsa9Ret9HjEgx0DRmIng==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-cerberus" ],
    "notBefore" : 0,
    "groups" : [ "/god" ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "d7bfe9f4-17b4-4ac8-a167-40edcfac973e",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/cerberus/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/cerberus/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "22fa031a-c8ed-4b94-b148-4966505538c3",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/cerberus/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/cerberus/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "3e3a9f6a-71ee-49fa-a361-bf1d50f5d58a",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "767e35e1-a44b-4152-b54b-05cce7429948",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "d532bf2e-7995-4b60-82ff-fc1a22931b5c",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "251e0dfe-c7f2-4c5c-b3c9-06e40e753ba5",
    "clientId" : "cerberus",
    "name" : "Cerbuerus UI Client",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "https://cerberus-react-ui:5173/*", "https://oauth.pstmn.io/*", "/*", "https://cerberus-react-ui/*", "https://cerberus-ui/*", "https://cerberus-ui:5173/*", "https://localhost:5173/*", "https://cerberus-ui.local/" ],
    "webOrigins" : [ "https://cerberus-ui:5173", "https://cerberus-react-ui:5173", "https://cerberus-ui", "https://oauth.pstmn.io", "/*", "https://cerberus-react-ui", "https://localhost:5173", "https://cerberus-ui.local/" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1728517214",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "a3d71a3c-3db4-433b-9f72-fc6f3fe415bb",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5a4f5464-15ea-45f9-9f99-69b2cb264f43",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7d1bed9e-29eb-41f6-b899-78d23792ed88",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "cerberus-audience", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "83a36bd3-ee56-4bbd-a2b8-64a92df8c186",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "26320f37-0f4b-4fa9-8d18-239819c63a67",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/cerberus/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/cerberus/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "476ca4e0-0d41-4933-8abf-13c3e174d6bf",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "d54860db-657d-4d9b-b9a4-754928f203b7",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "d7a07db7-0bb8-44dc-9962-edbc1ad5de59",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "ec5e908d-482d-4c08-8b12-3fd38700ca60",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "1ba61706-bac8-487b-b604-1e723a652c1b",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "e692e656-59b4-425d-8fb6-dca8894b01b8",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "4adb5a55-5257-443b-a877-51cb95fee191",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "6028169d-affb-41b8-b0cb-4a20b966d3d9",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "d6c7c0cc-086d-43fa-900b-7e8e733c0bce",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "d725f3a4-d730-4462-b90f-3a7ee2b1fcba",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "8430d94a-5811-4c8e-bb65-83263421d4a2",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "dcb0d850-fd52-4fe3-99a8-38355948f839",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "2bffe4c9-0598-49ae-877a-873fb3a1d864",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "53b0b30a-a44d-471c-918d-034d4473db98",
    "name" : "cerberus-audience",
    "description" : "Adds cerberus-api as an audience to tokens",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "ab50157e-749b-48a0-bebb-6ebe1599a37c",
      "name" : "cerberus-audience-mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "cerberus",
        "introspection.token.claim" : "true",
        "included.custom.audience" : "cerberus",
        "userinfo.token.claim" : "false",
        "id.token.claim" : "false",
        "lightweight.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "ac4d8876-2709-473d-8ba7-68a5b164581f",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "4858f64e-4eaa-40fb-a72b-51e16fc44232",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "1002769f-50fc-40a5-bf00-a49009586f84",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "04bd8a9e-c64d-413b-96c1-e92148b42923",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7ebe5cdd-9014-467c-8691-c553bdb602b1",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "b1a390d8-a529-419b-866d-35fc2688a56f",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "00354dba-0808-4573-b800-a2863cacc123",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3744657d-a76e-4acf-ada4-3efa5e6ccd9c",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "851b47b3-c857-42a8-b5b7-4b1c1d164c9c",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "1279ddf2-181f-4639-843a-231a28825de6",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2fe03692-ca48-4ad1-860e-d0b6eb62bf50",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f359a173-731b-4693-a1ec-486dcb7a4272",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3fe402e5-696e-4c81-ade0-81865615ed44",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a5ece552-a12a-44af-80a6-fd2b379b36e1",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "99bb5ad1-e73d-4e7c-b701-abe2754107d8",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "be83633f-8d62-4a46-ad4f-7e05a9b939f3",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f4edc0f2-76d2-4da5-a169-74c244da9cd6",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e67600e7-7df8-4b7f-ba98-f607b5190187",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "844e101d-4802-4955-be71-45e07a578ed2",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e1d54e19-c92b-44be-8599-39c9e4b96e5b",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "ab381483-be39-413a-85d6-ea82c10124b6",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "639f1c8f-4c65-4550-8f9b-12fc518e6f47",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6b836398-831d-40a3-9aa9-52f3c93789d8",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "c82707d1-feb5-4218-8a19-779a1cca38d1",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "2efd4b12-b54c-4825-93ca-9f3ccbd7162b",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "4d490b0f-bdb8-45fb-a4f8-7adfc6e831d8",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "1adab561-c11c-44ae-af23-c41aca7316e8",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "f098b8d1-4c32-41c0-9750-7ac962b5bceb",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr", "basic", "cerberus-audience" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "a5cbebed-3745-4fe4-9e9c-f966f06e408f",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "2a82a8a2-abc6-4ce5-88ff-f791c5912762",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "86bedbe0-821d-4db3-bc8d-7defda7ed511",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "9ce8f355-e09c-433b-876f-60acab0fe28f",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "57f39c74-84f5-4ca3-967b-d6cecda0097f",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "3029112c-9431-4d99-9b52-59a3ee10f5dc",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-address-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "bd5f99e8-073c-4558-9fc3-888d9ccc0bbf",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "60375926-1fe9-435e-83fd-48c2112be6e4",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "1999393e-606f-4bf4-89ba-fde91112e3f6",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "0c3ae7ce-6e23-4a23-98dd-2b7b5487b280" ],
        "secret" : [ "oEC2BZq-IA61UYg9XdArMvvNU0vwku1GALWij39tAEIyx3aPiAuoq7HV3zVMdBoeArrb0of3m1AunBuicZUa-Ym-lW3mhgzoGgtXopXmJ0KL8zezsIdoaAl1rnNPp2Tk3WyJ7b6IuirOrC0DPDCGupJZyIghgWGmvSZ8Kf9bC48" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "ae16a3e6-9f1a-437f-beaf-a7e40b2f3a9a",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEAxZJsL8K4nTDpwWPgXKeIzDR8m65W8iIeLlDai1NO3tL/arsSlRzAwsBu5GxuzsW/QPlV717LbxMhVYVQtL7TVkMYCRtQB+DK3bZ4t9qo3ZgcSsdTML8f6FU88REbOkypvYJSRg2c2YPAX2rD99D0N/ygjQvz30+TBI/qiDgHJpEovgUDKqiIt2hd+k4XXkis5/HIM6PTIlGK4UJgNp5lWfZ+kLvbAKBSfQm/6Iob0LKKuZac6UxzpogPaNBIyzX3oUnPDtRihknSLAwWCWeoz7ms0tyGcSl9rZqMSVp6asfTH/97DOzLShem7QWi0lD0s2M/TQdyMrtsgt4bW7EGrwIDAQABAoIBAFmCI6djpXX5of1ufUgc0poJMWbqjhN2p4u+L7StUm8a0oKNLDcH5sCUo+iyw2TELAiIrYkbvjidRx3SnySzy1UqYmpFyHU5P09BCuHom1aBQlgSg7ry68a7Tze700UPVFs5/oIkSqo0yWOxIAVW0j3HIwmjn6HNEEMh3FRIZdzvW6R9IRaUVQhB5uzFYYrF+iQF0vuS9YYCR4QnMvJFPJCz7YVX6rBNKjLbtqPDz42UtgxWzZ0/7cqC3c4hyEThzcqxBYe911RaNChcwYKYgLz2wbESmtD9fu5/Vg12z7FQUjFk/UoRMxJ7yYqflLtCnMgp237CYpLvI+3AhlOHXqkCgYEA+3OuKa1r3sBsfIhFuz7KcAxbUxLIDwiClplZ/YBUUm+jTaTZG0V+O7ay0q7L/DGskjiON8PsBcBnx7vsrUCMMzorh3WP3sAG5NitXf4Z56p+IBkYsDQ+N8SjArcR4caNDd7VY75twD4UmNTMYFVWI1C1W+L30NEoad1+K7iYxU0CgYEAySVB5I3OGwWXI1JIhev9FCt9Shm2EbWAB/75u4Qdk5Ebf66ul+USkJaS2tj/lH/i8TEolzA+mH0PRAls65wYs9Xc2CakRYnFw36pmnMu5Jh9OApahLOtfwGDCfTyqqkk4hblqOq3dOUiyv5bL04ol63tg5mJHQ3suZMDqUerDesCgYEArQI2/u4Xnjf/bN/GOsNFPjsCSvJNPCq6zyvMQyOc4Ot3DOEzkBQMesGF4HfsWiVDe4f2MmBXcM2lmkOu4LXcwRJxCM7Wooi1NZfwEQ/YexFPnn4mAnavqGdfUWrsns+iFb0QTYSktvT/7vfbdxzAG6RYZFSR9dczW0POn/5u/rECgYEAkHOSO6ne3ycHoFUiQhL03/xPcNzAFT2sIZHqFNFPUD+AaRSwy+K1j2KjOklmWmXxO9da2CDMg0Qkp27Bav7h+pxWimBNzqafgMLA2GtpvL8KBinhUbWbnj8etRLVBtyL4VYiPkm50FgRwYgjQfi2TB+bF8w2XMg4PhknIvWWEVsCgYEAqsD14WIaqcdemECa3epsOUxWn5lMhfJXPM4slN29km3Kpck2jL/rTlJUoGYncVPCDiv7Ue7WC9ilgdR+OZcgtxlK7z+v0q9nCZzCWTjO4OnlLnvd5XDrvhXpGvfOyDUFJdE3pjCShQIOBaYoW0gceNpZPLwYcbZjGbH8geosoPs=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICnzCCAYcCBgGSYKSjEDANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhjZXJiZXJ1czAeFw0yNDEwMDYwNzAyMzVaFw0zNDEwMDYwNzA0MTVaMBMxETAPBgNVBAMMCGNlcmJlcnVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxZJsL8K4nTDpwWPgXKeIzDR8m65W8iIeLlDai1NO3tL/arsSlRzAwsBu5GxuzsW/QPlV717LbxMhVYVQtL7TVkMYCRtQB+DK3bZ4t9qo3ZgcSsdTML8f6FU88REbOkypvYJSRg2c2YPAX2rD99D0N/ygjQvz30+TBI/qiDgHJpEovgUDKqiIt2hd+k4XXkis5/HIM6PTIlGK4UJgNp5lWfZ+kLvbAKBSfQm/6Iob0LKKuZac6UxzpogPaNBIyzX3oUnPDtRihknSLAwWCWeoz7ms0tyGcSl9rZqMSVp6asfTH/97DOzLShem7QWi0lD0s2M/TQdyMrtsgt4bW7EGrwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB8TGFTK+CrNJOpVGY+qI6OwCMzqpwdhxBPXD3XL9xEkYRZ4OiL/F9o4erTNMyHnBAXJn3/LWulB5uIpjMpQi7jfBDowuRN/URLet43V5wj5YvEd3xUM5M8dQ7t/lpVCVaW+ILri5LwrM1Y0e1gUJYF3VHTwQ9zf4fPVJgJEk04MRlntWPf4rissHzy7uLJmGhKOt28n0l0BRIiFoEZ02KVtNAParOxwftq44wgWwmU9pY1eiz9Jzlm27Q7pnnJ5q/e/BOZYDcrEK91ojacBkdypvXivm5XwdcDOq53Mr7QkXTZs6r4ob3G4Rbhi2ykAiIgt8Gbc8cLy9ogHYCl8xz4" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "3f189fe7-e523-45c1-962b-d0c3b28312ec",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEA5SJbN1wkzNBDTiriVKy2Kob202hvlYb09lW72xOw1Ab9RGq84o9x9WW8dsqDTS8H5RWzvjHU/ybamxYOWNq0ZxWJ6juz+luW7w2LZc9pje6FBX0UlI0rEwYGjAyQ2rd5o0mORrgVVgN2/Cp8XZLby2/ldpNCdoYNyUZfUgSSgbwww/9FC7EuQ2F0BrNZYAGB59w1A+jaUf0lwuNrq58HO9ya0q1qLupLbRz4YkaJOEdfKaC8tGIXE5yffO4LwD1WPFjOGKsSNBZcQC2zveBqjovdmadhh5HJKEVfgTMeJZgHiIVON94F6BwB7Es3kfdFdWy1ZQGX1c5liT1itKLjBQIDAQABAoIBAAxN4D6UiuBZtaeKq303ChA2D6aSFt3dcaWRvIT65XW5S1vjbHGxGMI//JMXdF4ObrrZQ73soJ6z+Cy4TjxswB/B+xYyLwu8Y9pB7LCipu0peAivqw2AGCZNHkhie1vXWuePEV4QUAr+pCLN6EBBHN7rixOnPDwvnilnB0LY/oILXkLCmYZs863jVp3H+WDPK1Uyr/G3at4EpBB+Md2C0FWxAV42wF4AizJUtxKgOD0A0o48hW6x4aBjUARGUAjjTke39zanelrdD2izsBqdmSaHven9lk9r9IarE26KCVfshktAaikrwo8a2Z6zJcl4mgr+HQ/JqqA8ni0OdHLRHvECgYEA9JDxYEOZ31GLbVdw69jnmCcMTNhilYrRJo+4IF5SXqKAakPlM9+Bci8/szLCTxqU7nOUPgOfjv1SCaTCh0yv2BiGXsfOlVauBeNLJ7KOf3UtA//FAkpO7LQIe0C12zewdO/EpfqoQ8UHltaWiDCSkeQ3/j0P3TViCKxiXiF+7vECgYEA79i3yCfN1J8EYZFpAZyFQL64JWPbC1WHZGS+Hhh0/MxmmxLWgA2MJpgy998h9h8lwGDchuUKA6z22N7bRx1Yj2V5AKWvATIMyffpMu4woypT0LpPLF+O6uJvjLc+gtrbBt/FTQgYaHkkHUhjV2hZMFm/EXkua8Mojfze+2OwXVUCgYATDd/gciPg5EeKo09m8KVKk3A/5HP51rDo4jWkP/UG7n42yUdoPTemn8vEuGWvKBEGavbXxgx+ZXooyi9lvzHMEk0VwVd1ByXTy5ulYiH8CDMTpq/At+1iP7yRbb89bx9OXQfjLp5BeW5X8CwWPEKPH0rFghhkUa5ropKfZtiu4QKBgCeDj7uU+y8VR5Z/a0pNrBJfmVznl5XFcHnUsxGoO9XOIvVXZClSkg1ls7fsdd7jgMex7YL3xu+WFlDiXkPYDNgLAqVdpnhO85ZulmfCoBaxiX9wwkxwLc56oaAQLGdIgR8fzJSFSegkVRPR8jPbSB5UGstZKJGuZEcIKwBFiy/FAoGAY00AqFVhhc2Sjlmr7qkRabtN/XCdiYyFAcmx14WiOgbxTsRZRhb/LowXgS6ugE2pa0FFjmx+wSpC4f1wlUYxYauL7nqJj5nb9k9oMNaNgj1kf7H9fi5bRoZMpWEreqiT7MnnThTmLROw1gbVAGssDT2WffpoPL50Vz1xnkYd1kA=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICnzCCAYcCBgGSYKSjqDANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhjZXJiZXJ1czAeFw0yNDEwMDYwNzAyMzVaFw0zNDEwMDYwNzA0MTVaMBMxETAPBgNVBAMMCGNlcmJlcnVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5SJbN1wkzNBDTiriVKy2Kob202hvlYb09lW72xOw1Ab9RGq84o9x9WW8dsqDTS8H5RWzvjHU/ybamxYOWNq0ZxWJ6juz+luW7w2LZc9pje6FBX0UlI0rEwYGjAyQ2rd5o0mORrgVVgN2/Cp8XZLby2/ldpNCdoYNyUZfUgSSgbwww/9FC7EuQ2F0BrNZYAGB59w1A+jaUf0lwuNrq58HO9ya0q1qLupLbRz4YkaJOEdfKaC8tGIXE5yffO4LwD1WPFjOGKsSNBZcQC2zveBqjovdmadhh5HJKEVfgTMeJZgHiIVON94F6BwB7Es3kfdFdWy1ZQGX1c5liT1itKLjBQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCrQlY8bxIZa43l82eYE2XA/8QBo0FxlCpOEPFHRVON4gJYjMfR/3Cb3AysJu4A/NHwwXbbkr2d29KeruUVAGPUvuLbQv3wfZAU73z8teAeBHOSte/28Dn0TvLYAJ9uZgXFB4185Vh6qDiBMBOuOjiiAUHrqi6wWpZqDNec81fHv33mNhKLmAYVpXElNpW16PhFMfkVKqFTF01Qtc3Yy/3Ond1XQtMcbiJGSyG3NdzjVsxptbAmDJPE9XJ1oB8kppQZAhPGPEWknJYEszIboywh3AS/qISUUVfqFxJLATOLQ5m60NgAp3/kgS0c3y6XNQt4SnUgCyLX1QZSgb6Rl363" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "4afe7d47-f456-43d8-8d47-4644bd014ee8",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "9cf053a1-0191-40f1-a9fe-12298cdd1301" ],
        "secret" : [ "ZesItzxAti5vbd9zAX45qg" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "6fb3ec79-6deb-4bf9-aab4-4995b4c40905",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "41b53e6f-4b5a-4327-896e-5d12f8fe4ded",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d635e511-6a3e-4ab7-ad33-0d0651e5ccfd",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "49cb9b1f-1a5c-41ce-af10-b9083f7a9c8a",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9248e899-fc07-49ab-95ab-f4e129be9678",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a98627c0-68d5-468c-a74e-9f7386c0d5c3",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ca7f9282-73bf-4bc9-8203-cec7d6b20639",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7c275dd0-90cb-4c95-83be-23b373296af6",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bcc9b60f-a440-41c8-bc7c-e185277aea4e",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a75dd35f-6f16-48ac-83d8-d064c203281c",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a1aa9e75-400e-4f92-9b93-13776fb3559c",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4f57bb9f-f405-4fe9-a5e8-8aa4b4669d20",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a56613f3-cb2c-4c42-850e-ade46ee0346a",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "be5054f8-7f09-40ef-8bcc-ac6317c25573",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7db0bfb5-fc02-40bc-9adc-050e4b612e15",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "aa40e21b-59e1-4d47-8233-1bb1ea47e50c",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e716c9d9-ac98-41c0-8047-7214aff6cc2e",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8daa2a31-cb7f-461d-b70a-16f45185539a",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "5322c191-4883-473b-a005-4cf764e8b401",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "babd1b7e-ec71-4b40-9264-19bffab5fe95",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.verify-email" : "",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email" : "",
    "clientOfflineSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.execute-actions" : "",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "organizationsEnabled" : "false",
    "shortVerificationUri" : "",
    "actionTokenGeneratedByUserLifespan.reset-credentials" : ""
  },
  "keycloakVersion" : "25.0.0",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}