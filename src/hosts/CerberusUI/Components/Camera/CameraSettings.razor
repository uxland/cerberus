@using Blazorise
@using Cerberus.BackOffice.Features.OrganizationalStructure.Camera
@using Cerberus.UI.Infrastructure
@inject CameraDetailGetter cameraDetailGetter
<Fields>
    <Field Horizontal>
        <Label>Id</Label>
        <TextEdit @bind-Text="@Id" ReadOnly/>
    </Field>
    <Field Horizontal>
        <Label>Description</Label>
        <TextEdit @bind-Text="@Description" ReadOnly/>
    </Field>
    <Field Horizontal>
        <Label>Address</Label>
        <TextEdit @bind-Text="@Address" ReadOnly/>
    </Field>
    <Field Horizontal>
        <Label>Capture pattern</Label>
        <TextEdit @bind-Text="@CapturePattern" ReadOnly/>
    </Field>
    <Field Horizontal>
        <Label>User name</Label>
        <TextEdit @bind-Text="@UserName" ReadOnly/>
    </Field>
    <Field Horizontal>
        <Label>Password</Label>
        <TextEdit @bind-Text="@Password" ReadOnly/>
    </Field>
</Fields>

@code {
    [Parameter]
    public string CameraId { get; set; }
    public Camera? CameraItem { get; set; }
    
    
    protected override async Task OnInitializedAsync()
    {
        this.CameraItem = await cameraDetailGetter.GetCameraDetail(CameraId);
        
        this.Id = CameraItem.Id;
        this.Description = CameraItem.Description;
        this.Address = CameraItem.AdminSettings.IpAddress;
        this.CapturePattern = CameraItem.AdminSettings.CaptureRecurrencePattern;
        this.UserName = CameraItem.AdminSettings.Credentials.Username;
        this.Password = CameraItem.AdminSettings.Credentials.Password;
        
    }

    public string Id { get; set; }
    public string Description { get; set; }
    public string Address { get; set; }
    public string CapturePattern { get; set; }
    public string UserName { get; set; }
    public string Password { get; set; }
}