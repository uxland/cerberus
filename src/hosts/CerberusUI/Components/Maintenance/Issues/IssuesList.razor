@using Blazorise
@using Cerberus.Maintenance.Features.Features.Issues.ListByLocationPath
@using Cerberus.UI.Infrastructure.Extensions
@using Cerberus.UI.Infrastructure.Maintenance.Isues
@inject IssueSummaryGetter issueSummaryGetter
<h3>Open issues</h3>

<CardDeck>
    @foreach (var issue in Issues)
    {
        <Card>
            <CardHeader>
                <NavLink href="@GetIssueUrl(issue)">
                    <CardTitle>
                        <Icon Name="@IconName.Camera"></Icon>@issue.Description - @issue.CreatedAt.Format()
                    </CardTitle>
                </NavLink>
            </CardHeader>
        </Card>
    }
</CardDeck>

@code {
    
    [Parameter]
    public string? Path { get; set; }

    public List<PendingMaintenanceIssueSummary> Issues { get; set; } = [];
    
    public string GetIssueUrl(PendingMaintenanceIssueSummary issue)
    {
        return $"maintenance-issues/{issue.Id}";
    }
    
    protected override async Task OnParametersSetAsync()
    {
        if(this.Path != null)
            Issues = await issueSummaryGetter.GetByLocation(Path);
        await base.OnParametersSetAsync();
    }

}